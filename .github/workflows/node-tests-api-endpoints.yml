name: Node Tests API Endpoints

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main

jobs:
  job_test:
    runs-on: ubuntu-latest

    steps:
    - name: Clone repository
      uses: actions/checkout@v2

    - name: Install node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16.x'

    - name: Install dependencies
      run: npm install

    - name: Install dependencies for Puppeteer
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          wget \
          ca-certificates \
          fonts-liberation \
          libappindicator3-1 \
          libasound2 \
          libatk-bridge2.0-0 \
          libatk1.0-0 \
          libcups2 \
          libdbus-1-3 \
          libdrm2 \
          libgbm1 \
          libgtk-3-0 \
          libnspr4 \
          libnss3 \
          libxcomposite1 \
          libxdamage1 \
          libxrandr2 \
          xdg-utils \
          --no-install-recommends
        sudo apt-get clean

    - name: Start server
      run: npm start > torapi.log 2>&1 &

    - name: Install jq
      run: sudo apt-get install -y jq
    
    - name: Run API tests
      run: |
        set +e

        echo "Check jq version: $(jq --version)"

        echo
        echo "- Checking the availability of data on the server:"
        echo

        rutracker=true
        kinozal=true
        rutor=true
        nonameclub=true

        data=$(curl -s https://rutracker.org/forum/index.php | iconv -f Windows-1251 -t UTF-8 | grep "Правила")
        if [ -n "$data" ]; then
          echo "RuTracker data avaliable: true"
        else
          echo "RuTracker data avaliable: false"
          rutracker=false
        fi

        data=$(curl -s https://kinozal.tv | iconv -f Windows-1251 -t UTF-8 | grep "Правила")
        if [ -n "$data" ]; then
          echo "Kinozal data avaliable: true"
        else
          echo "Kinozal data avaliable: false"
          kinozal=false
        fi


        data=$(curl -s https://rutor.info | grep "Правила")
        if [ -n "$data" ]; then
          echo "RuTor data avaliable: true"
        else
          echo "RuTor data avaliable: false"
          rutor=false
        fi

        data=$(curl -s https://nnmclub.to | iconv -f Windows-1251 -t UTF-8 | grep "Правила")
        if [ -n "$data" ]; then
          echo "NoNameClub data avaliable: true"
        else
          echo "NoNameClub data avaliable: false"
          nonameclub=false
        fi

        echo

        all=16
        successful=0
        failed=0

        echo "- Search by Title:"
        echo

        echo "--- RuTracker:"

        ### Check Response Time
        startTime=$(date +%s%3N)
        response=$(curl --write-out "%{http_code}" --silent --output /tmp/response.json http://localhost:8443/api/search/title/rutracker?query=the+rookie 2>/dev/null)
        endTime=$(date +%s%3N)
        responseTime=$((endTime - startTime))
        echo "Response time (ms): $responseTime"
        
        ### Check Response Code
        if [ $response -eq 200 ]; then
          echo "Status code: $response"
          successful=$((successful+1))
        else
          echo "Status code: $response"
          if [ $rutracker == false ]; then
            echo "! Skip counter, data is not available on the server"
          else
            failed=$((failed+1))
          fi
        fi

        ### Check Data
        data=$(jq -r '.[0].Name // empty' /tmp/response.json 2>/dev/null)
        if [ -n "$data" ]; then
          echo "Check data: true"
          successful=$((successful+1))
        else
          echo "Check data: false"
          if [ $rutracker == false ]; then
            echo "! Skip counter, data is not available on the server"
          else
            failed=$((failed+1))
          fi
        fi
        
        echo "Data: $data"
        echo

        echo "--- Kinozal:"

        startTime=$(date +%s%3N)
        response=$(curl --write-out "%{http_code}" --silent --output /tmp/response.json http://localhost:8443/api/search/title/kinozal?query=the+rookie 2>/dev/null)
        endTime=$(date +%s%3N)
        responseTime=$((endTime - startTime))
        echo "Response time (ms): $responseTime"
        
        if [ $response -eq 200 ]; then
          echo "Status code: $response"
          successful=$((successful+1))
        else
          echo "Status code: $response"
          if [ $kinozal == false ]; then
            echo "! Skip counter, data is not available on the server"
          else
            failed=$((failed+1))
          fi
        fi

        data=$(jq -r '.[0].Name // empty' /tmp/response.json 2>/dev/null)
        if [ -n "$data" ]; then
          echo "Check data: true"
          successful=$((successful+1))
        else
          echo "Check data: false"
          if [ $kinozal == false ]; then
            echo "! Skip counter, data is not available on the server"
          else
            failed=$((failed+1))
          fi
        fi

        echo "Data: $data"
        echo

        echo "--- RuTor:"

        startTime=$(date +%s%3N)
        response=$(curl --write-out "%{http_code}" --silent --output /tmp/response.json http://localhost:8443/api/search/title/rutor?query=the+rookie 2>/dev/null)
        endTime=$(date +%s%3N)
        responseTime=$((endTime - startTime))
        echo "Response time (ms): $responseTime"
        
        if [ $response -eq 200 ]; then
          echo "Status code: $response"
          successful=$((successful+1))
        else
          echo "Status code: $response"
          if [ $rutor == false ]; then
            echo "! Skip counter, data is not available on the server"
          else
            failed=$((failed+1))
          fi
        fi

        data=$(jq -r '.[0].Name // empty' /tmp/response.json 2>/dev/null)
        if [ -n "$data" ]; then
          echo "Check data: true"
          successful=$((successful+1))
        else
          echo "Check data: false"
          if [ $rutor == false ]; then
            echo "! Skip counter, data is not available on the server"
          else
            failed=$((failed+1))
          fi
        fi

        echo "Data: $data"
        echo

        echo "--- NoNameClub:"

        startTime=$(date +%s%3N)
        response=$(curl --write-out "%{http_code}" --silent --output /tmp/response.json http://localhost:8443/api/search/title/nonameclub?query=the+rookie 2>/dev/null)
        endTime=$(date +%s%3N)
        responseTime=$((endTime - startTime))
        echo "Response time (ms): $responseTime"
        
        if [ $response -eq 200 ]; then
          echo "Status code: $response"
          successful=$((successful+1))
        else
          echo "Status code: $response"
          if [ $nonameclub == false ]; then
            echo "! Skip counter, data is not available on the server"
          else
            failed=$((failed+1))
          fi
        fi

        data=$(jq -r '.[0].Name // empty' /tmp/response.json 2>/dev/null)
        if [ -n "$data" ]; then
          echo "Check data: true"
          successful=$((successful+1))
        else
          echo "Check data: false"
          if [ $nonameclub == false ]; then
            echo "! Skip counter, data is not available on the server"
          else
            failed=$((failed+1))
          fi
        fi

        echo "Data: $data"
        echo

        echo "- Search by ID:"
        echo
        
        echo "--- RuTracker:"
         
        startTime=$(date +%s%3N)
        response=$(curl --write-out "%{http_code}" --silent --output /tmp/response.json http://localhost:8443/api/search/id/rutracker?query=6489937 2>/dev/null)
        endTime=$(date +%s%3N)
        responseTime=$((endTime - startTime))
        echo "Response time (ms): $responseTime"
        
        if [ $response -eq 200 ]; then
          echo "Status code: $response"
          successful=$((successful+1))
        else
          echo "Status code: $response"
          if [ $rutracker == false ]; then
            echo "! Skip counter, data is not available on the server"
          else
            failed=$((failed+1))
          fi
        fi
        
        data=$(jq -r '.[0].Name // empty' /tmp/response.json 2>/dev/null)
        if [ -n "$data" ]; then
          echo "Check data: true"
          successful=$((successful+1))
        else
          echo "Check data: false"
          if [ $rutracker == false ]; then
            echo "! Skip counter, data is not available on the server"
          else
            failed=$((failed+1))
          fi
        fi

        echo "Data: $data"
        echo

        echo "--- Kinozal:"

        startTime=$(date +%s%3N)
        response=$(curl --write-out "%{http_code}" --silent --output /tmp/response.json http://localhost:8443/api/search/id/kinozal?query=2022944 2>/dev/null)
        endTime=$(date +%s%3N)
        responseTime=$((endTime - startTime))
        echo "Response time (ms): $responseTime"
        
        if [ $response -eq 200 ]; then
          echo "Status code: $response"
          successful=$((successful+1))
        else
          echo "Status code: $response"
          if [ $kinozal == false ]; then
            echo "! Skip counter, data is not available on the server"
          else
            failed=$((failed+1))
          fi
        fi

        data=$(jq -r '.[0].Name // empty' /tmp/response.json 2>/dev/null)
        if [ -n "$data" ]; then
          echo "Check data: true"
          successful=$((successful+1))
        else
          echo "Check data: false"
          if [ $kinozal == false ]; then
            echo "! Skip counter, data is not available on the server"
          else
            failed=$((failed+1))
          fi
        fi

        echo "Data: $data"
        echo

        echo "--- RuTor:"

        startTime=$(date +%s%3N)
        response=$(curl --write-out "%{http_code}" --silent --output /tmp/response.json http://localhost:8443/api/search/id/rutor?query=970650 2>/dev/null)
        endTime=$(date +%s%3N)
        responseTime=$((endTime - startTime))
        echo "Response time (ms): $responseTime"
        
        if [ $response -eq 200 ]; then
          echo "Status code: $response"
          successful=$((successful+1))
        else
          echo "Status code: $response"
          if [ $rutor == false ]; then
            echo "! Skip counter, data is not available on the server"
          else
            failed=$((failed+1))
          fi
        fi

        data=$(jq -r '.[0].Name // empty' /tmp/response.json 2>/dev/null)
        if [ -n "$data" ]; then
          echo "Check data: true"
          successful=$((successful+1))
        else
          echo "Check data: false"
          if [ $rutor == false ]; then
            echo "! Skip counter, data is not available on the server"
          else
            failed=$((failed+1))
          fi
        fi

        echo "Data: $data"
        echo

        echo "--- NoNameClub:"

        startTime=$(date +%s%3N)
        response=$(curl --write-out "%{http_code}" --silent --output /tmp/response.json http://localhost:8443/api/search/id/nonameclub?query=1259608 2>/dev/null)
        endTime=$(date +%s%3N)
        responseTime=$((endTime - startTime))
        echo "Response time (ms): $responseTime"
        
        if [ $response -eq 200 ]; then
          echo "Status code: $response"
          successful=$((successful+1))
        else
          echo "Status code: $response"
          if [ $nonameclub == false ]; then
            echo "! Skip counter, data is not available on the server"
          else
            failed=$((failed+1))
          fi
        fi

        data=$(jq -r '.[0].Name // empty' /tmp/response.json 2>/dev/null)
        if [ -n "$data" ]; then
          echo "Check data: true"
          successful=$((successful+1))
        else
          echo "Check data: false"
          if [ $nonameclub == false ]; then
            echo "! Skip counter, data is not available on the server"
          else
            failed=$((failed+1))
          fi
        fi

        echo "Data: $data"
        echo

        echo "Number all tests: $all"
        echo "Number successful tests: $successful"
        echo "Number failed tests: $failed"

        cat torapi.log

        if [ $failed -ne 0 ]; then
          exit 1
        fi